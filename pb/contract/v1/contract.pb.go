// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: substreams/proto/contract.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Events struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcsRequesteds    []*Acs_Requested    `protobuf:"bytes,1,rep,name=acs_requesteds,json=acsRequesteds,proto3" json:"acs_requesteds,omitempty"`
	AcsThreadFundeds []*Acs_ThreadFunded `protobuf:"bytes,2,rep,name=acs_thread_fundeds,json=acsThreadFundeds,proto3" json:"acs_thread_fundeds,omitempty"`
}

func (x *Events) Reset() {
	*x = Events{}
	mi := &file_substreams_proto_contract_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Events) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events) ProtoMessage() {}

func (x *Events) ProtoReflect() protoreflect.Message {
	mi := &file_substreams_proto_contract_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events.ProtoReflect.Descriptor instead.
func (*Events) Descriptor() ([]byte, []int) {
	return file_substreams_proto_contract_proto_rawDescGZIP(), []int{0}
}

func (x *Events) GetAcsRequesteds() []*Acs_Requested {
	if x != nil {
		return x.AcsRequesteds
	}
	return nil
}

func (x *Events) GetAcsThreadFundeds() []*Acs_ThreadFunded {
	if x != nil {
		return x.AcsThreadFundeds
	}
	return nil
}

type Calls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AcsCallRequests []*Acs_RequestCall `protobuf:"bytes,1,rep,name=acs_call_requests,json=acsCallRequests,proto3" json:"acs_call_requests,omitempty"`
}

func (x *Calls) Reset() {
	*x = Calls{}
	mi := &file_substreams_proto_contract_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Calls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calls) ProtoMessage() {}

func (x *Calls) ProtoReflect() protoreflect.Message {
	mi := &file_substreams_proto_contract_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calls.ProtoReflect.Descriptor instead.
func (*Calls) Descriptor() ([]byte, []int) {
	return file_substreams_proto_contract_proto_rawDescGZIP(), []int{1}
}

func (x *Calls) GetAcsCallRequests() []*Acs_RequestCall {
	if x != nil {
		return x.AcsCallRequests
	}
	return nil
}

type EventsCalls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events *Events `protobuf:"bytes,1,opt,name=events,proto3" json:"events,omitempty"`
	Calls  *Calls  `protobuf:"bytes,2,opt,name=calls,proto3" json:"calls,omitempty"`
}

func (x *EventsCalls) Reset() {
	*x = EventsCalls{}
	mi := &file_substreams_proto_contract_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsCalls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsCalls) ProtoMessage() {}

func (x *EventsCalls) ProtoReflect() protoreflect.Message {
	mi := &file_substreams_proto_contract_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsCalls.ProtoReflect.Descriptor instead.
func (*EventsCalls) Descriptor() ([]byte, []int) {
	return file_substreams_proto_contract_proto_rawDescGZIP(), []int{2}
}

func (x *EventsCalls) GetEvents() *Events {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *EventsCalls) GetCalls() *Calls {
	if x != nil {
		return x.Calls
	}
	return nil
}

type Acs_Requested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvtTxHash       string                 `protobuf:"bytes,1,opt,name=evt_tx_hash,json=evtTxHash,proto3" json:"evt_tx_hash,omitempty"`
	EvtIndex        uint32                 `protobuf:"varint,2,opt,name=evt_index,json=evtIndex,proto3" json:"evt_index,omitempty"`
	EvtBlockTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=evt_block_time,json=evtBlockTime,proto3" json:"evt_block_time,omitempty"`
	EvtBlockNumber  uint64                 `protobuf:"varint,4,opt,name=evt_block_number,json=evtBlockNumber,proto3" json:"evt_block_number,omitempty"`
	AciUid          []byte                 `protobuf:"bytes,5,opt,name=aci_uid,json=aciUid,proto3" json:"aci_uid,omitempty"`
	ParentThreadUid []byte                 `protobuf:"bytes,6,opt,name=parent_thread_uid,json=parentThreadUid,proto3" json:"parent_thread_uid,omitempty"`
	ThreadUid       []byte                 `protobuf:"bytes,7,opt,name=thread_uid,json=threadUid,proto3" json:"thread_uid,omitempty"`
	Requester       []byte                 `protobuf:"bytes,8,opt,name=requester,proto3" json:"requester,omitempty"`
	RequestRef      string                 `protobuf:"bytes,9,opt,name=request_ref,json=requestRef,proto3" json:"request_ref,omitempty"`
}

func (x *Acs_Requested) Reset() {
	*x = Acs_Requested{}
	mi := &file_substreams_proto_contract_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acs_Requested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acs_Requested) ProtoMessage() {}

func (x *Acs_Requested) ProtoReflect() protoreflect.Message {
	mi := &file_substreams_proto_contract_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acs_Requested.ProtoReflect.Descriptor instead.
func (*Acs_Requested) Descriptor() ([]byte, []int) {
	return file_substreams_proto_contract_proto_rawDescGZIP(), []int{3}
}

func (x *Acs_Requested) GetEvtTxHash() string {
	if x != nil {
		return x.EvtTxHash
	}
	return ""
}

func (x *Acs_Requested) GetEvtIndex() uint32 {
	if x != nil {
		return x.EvtIndex
	}
	return 0
}

func (x *Acs_Requested) GetEvtBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EvtBlockTime
	}
	return nil
}

func (x *Acs_Requested) GetEvtBlockNumber() uint64 {
	if x != nil {
		return x.EvtBlockNumber
	}
	return 0
}

func (x *Acs_Requested) GetAciUid() []byte {
	if x != nil {
		return x.AciUid
	}
	return nil
}

func (x *Acs_Requested) GetParentThreadUid() []byte {
	if x != nil {
		return x.ParentThreadUid
	}
	return nil
}

func (x *Acs_Requested) GetThreadUid() []byte {
	if x != nil {
		return x.ThreadUid
	}
	return nil
}

func (x *Acs_Requested) GetRequester() []byte {
	if x != nil {
		return x.Requester
	}
	return nil
}

func (x *Acs_Requested) GetRequestRef() string {
	if x != nil {
		return x.RequestRef
	}
	return ""
}

type Acs_ThreadFunded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvtTxHash      string                 `protobuf:"bytes,1,opt,name=evt_tx_hash,json=evtTxHash,proto3" json:"evt_tx_hash,omitempty"`
	EvtIndex       uint32                 `protobuf:"varint,2,opt,name=evt_index,json=evtIndex,proto3" json:"evt_index,omitempty"`
	EvtBlockTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=evt_block_time,json=evtBlockTime,proto3" json:"evt_block_time,omitempty"`
	EvtBlockNumber uint64                 `protobuf:"varint,4,opt,name=evt_block_number,json=evtBlockNumber,proto3" json:"evt_block_number,omitempty"`
	ThreadUid      []byte                 `protobuf:"bytes,5,opt,name=thread_uid,json=threadUid,proto3" json:"thread_uid,omitempty"`
	FundingAmount  uint64                 `protobuf:"varint,6,opt,name=funding_amount,json=fundingAmount,proto3" json:"funding_amount,omitempty"`
	Funder         []byte                 `protobuf:"bytes,7,opt,name=funder,proto3" json:"funder,omitempty"`
}

func (x *Acs_ThreadFunded) Reset() {
	*x = Acs_ThreadFunded{}
	mi := &file_substreams_proto_contract_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acs_ThreadFunded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acs_ThreadFunded) ProtoMessage() {}

func (x *Acs_ThreadFunded) ProtoReflect() protoreflect.Message {
	mi := &file_substreams_proto_contract_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acs_ThreadFunded.ProtoReflect.Descriptor instead.
func (*Acs_ThreadFunded) Descriptor() ([]byte, []int) {
	return file_substreams_proto_contract_proto_rawDescGZIP(), []int{4}
}

func (x *Acs_ThreadFunded) GetEvtTxHash() string {
	if x != nil {
		return x.EvtTxHash
	}
	return ""
}

func (x *Acs_ThreadFunded) GetEvtIndex() uint32 {
	if x != nil {
		return x.EvtIndex
	}
	return 0
}

func (x *Acs_ThreadFunded) GetEvtBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EvtBlockTime
	}
	return nil
}

func (x *Acs_ThreadFunded) GetEvtBlockNumber() uint64 {
	if x != nil {
		return x.EvtBlockNumber
	}
	return 0
}

func (x *Acs_ThreadFunded) GetThreadUid() []byte {
	if x != nil {
		return x.ThreadUid
	}
	return nil
}

func (x *Acs_ThreadFunded) GetFundingAmount() uint64 {
	if x != nil {
		return x.FundingAmount
	}
	return 0
}

func (x *Acs_ThreadFunded) GetFunder() []byte {
	if x != nil {
		return x.Funder
	}
	return nil
}

type Acs_RequestCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallTxHash      string                 `protobuf:"bytes,1,opt,name=call_tx_hash,json=callTxHash,proto3" json:"call_tx_hash,omitempty"`
	CallBlockTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=call_block_time,json=callBlockTime,proto3" json:"call_block_time,omitempty"`
	CallBlockNumber uint64                 `protobuf:"varint,3,opt,name=call_block_number,json=callBlockNumber,proto3" json:"call_block_number,omitempty"`
	CallOrdinal     uint64                 `protobuf:"varint,4,opt,name=call_ordinal,json=callOrdinal,proto3" json:"call_ordinal,omitempty"`
	CallSuccess     bool                   `protobuf:"varint,5,opt,name=call_success,json=callSuccess,proto3" json:"call_success,omitempty"`
	ParentThreadUid []byte                 `protobuf:"bytes,6,opt,name=parent_thread_uid,json=parentThreadUid,proto3" json:"parent_thread_uid,omitempty"`
	ThreadUid       []byte                 `protobuf:"bytes,7,opt,name=thread_uid,json=threadUid,proto3" json:"thread_uid,omitempty"`
	AciUid          []byte                 `protobuf:"bytes,8,opt,name=aci_uid,json=aciUid,proto3" json:"aci_uid,omitempty"`
	RequestRef      string                 `protobuf:"bytes,9,opt,name=request_ref,json=requestRef,proto3" json:"request_ref,omitempty"`
	OutputParam0    []byte                 `protobuf:"bytes,10,opt,name=output_param0,json=outputParam0,proto3" json:"output_param0,omitempty"`
}

func (x *Acs_RequestCall) Reset() {
	*x = Acs_RequestCall{}
	mi := &file_substreams_proto_contract_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acs_RequestCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acs_RequestCall) ProtoMessage() {}

func (x *Acs_RequestCall) ProtoReflect() protoreflect.Message {
	mi := &file_substreams_proto_contract_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acs_RequestCall.ProtoReflect.Descriptor instead.
func (*Acs_RequestCall) Descriptor() ([]byte, []int) {
	return file_substreams_proto_contract_proto_rawDescGZIP(), []int{5}
}

func (x *Acs_RequestCall) GetCallTxHash() string {
	if x != nil {
		return x.CallTxHash
	}
	return ""
}

func (x *Acs_RequestCall) GetCallBlockTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CallBlockTime
	}
	return nil
}

func (x *Acs_RequestCall) GetCallBlockNumber() uint64 {
	if x != nil {
		return x.CallBlockNumber
	}
	return 0
}

func (x *Acs_RequestCall) GetCallOrdinal() uint64 {
	if x != nil {
		return x.CallOrdinal
	}
	return 0
}

func (x *Acs_RequestCall) GetCallSuccess() bool {
	if x != nil {
		return x.CallSuccess
	}
	return false
}

func (x *Acs_RequestCall) GetParentThreadUid() []byte {
	if x != nil {
		return x.ParentThreadUid
	}
	return nil
}

func (x *Acs_RequestCall) GetThreadUid() []byte {
	if x != nil {
		return x.ThreadUid
	}
	return nil
}

func (x *Acs_RequestCall) GetAciUid() []byte {
	if x != nil {
		return x.AciUid
	}
	return nil
}

func (x *Acs_RequestCall) GetRequestRef() string {
	if x != nil {
		return x.RequestRef
	}
	return ""
}

func (x *Acs_RequestCall) GetOutputParam0() []byte {
	if x != nil {
		return x.OutputParam0
	}
	return nil
}

var File_substreams_proto_contract_proto protoreflect.FileDescriptor

var file_substreams_proto_contract_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x98, 0x01, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x63,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x0d,
	0x61, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x73, 0x12, 0x4b, 0x0a,
	0x12, 0x61, 0x63, 0x73, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x73, 0x5f, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x10, 0x61, 0x63, 0x73, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x46, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x05, 0x43, 0x61,
	0x6c, 0x6c, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x61, 0x63, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x0f, 0x61, 0x63,
	0x73, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x64, 0x0a,
	0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x63, 0x61, 0x6c,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x05, 0x63, 0x61,
	0x6c, 0x6c, 0x73, 0x22, 0xdb, 0x02, 0x0a, 0x0d, 0x41, 0x63, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x76, 0x74, 0x5f, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x74, 0x54,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x76, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x40, 0x0a, 0x0e, 0x65, 0x76, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x76, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x76, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x65, 0x76, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x63, 0x69, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x61, 0x63, 0x69, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x55,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x66, 0x22, 0x99, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x73, 0x5f, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x46, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x65, 0x76, 0x74, 0x5f, 0x74, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x74,
	0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x74, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x76, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x40, 0x0a, 0x0e, 0x65, 0x76, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x76, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x76, 0x74, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x65, 0x76, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x55, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x93, 0x03,
	0x0a, 0x0f, 0x41, 0x63, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x4f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x63, 0x69, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x63, 0x69, 0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x30, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_substreams_proto_contract_proto_rawDescOnce sync.Once
	file_substreams_proto_contract_proto_rawDescData = file_substreams_proto_contract_proto_rawDesc
)

func file_substreams_proto_contract_proto_rawDescGZIP() []byte {
	file_substreams_proto_contract_proto_rawDescOnce.Do(func() {
		file_substreams_proto_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_substreams_proto_contract_proto_rawDescData)
	})
	return file_substreams_proto_contract_proto_rawDescData
}

var file_substreams_proto_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_substreams_proto_contract_proto_goTypes = []any{
	(*Events)(nil),                // 0: contract.v1.Events
	(*Calls)(nil),                 // 1: contract.v1.Calls
	(*EventsCalls)(nil),           // 2: contract.v1.EventsCalls
	(*Acs_Requested)(nil),         // 3: contract.v1.Acs_Requested
	(*Acs_ThreadFunded)(nil),      // 4: contract.v1.Acs_ThreadFunded
	(*Acs_RequestCall)(nil),       // 5: contract.v1.Acs_RequestCall
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_substreams_proto_contract_proto_depIdxs = []int32{
	3, // 0: contract.v1.Events.acs_requesteds:type_name -> contract.v1.Acs_Requested
	4, // 1: contract.v1.Events.acs_thread_fundeds:type_name -> contract.v1.Acs_ThreadFunded
	5, // 2: contract.v1.Calls.acs_call_requests:type_name -> contract.v1.Acs_RequestCall
	0, // 3: contract.v1.EventsCalls.events:type_name -> contract.v1.Events
	1, // 4: contract.v1.EventsCalls.calls:type_name -> contract.v1.Calls
	6, // 5: contract.v1.Acs_Requested.evt_block_time:type_name -> google.protobuf.Timestamp
	6, // 6: contract.v1.Acs_ThreadFunded.evt_block_time:type_name -> google.protobuf.Timestamp
	6, // 7: contract.v1.Acs_RequestCall.call_block_time:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_substreams_proto_contract_proto_init() }
func file_substreams_proto_contract_proto_init() {
	if File_substreams_proto_contract_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_substreams_proto_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_substreams_proto_contract_proto_goTypes,
		DependencyIndexes: file_substreams_proto_contract_proto_depIdxs,
		MessageInfos:      file_substreams_proto_contract_proto_msgTypes,
	}.Build()
	File_substreams_proto_contract_proto = out.File
	file_substreams_proto_contract_proto_rawDesc = nil
	file_substreams_proto_contract_proto_goTypes = nil
	file_substreams_proto_contract_proto_depIdxs = nil
}
